define(["esri/map", "esri/arcgis/utils", "esri/geometry/Point", "dojo/_base/declare", "dojo/on", "dojo/touch", "dojo/dom", "dojo/_base/lang", "dojo/dom-style", "dojo/query", "dojo/NodeList-traverse", "dojo/dom-class", "dojo/domReady!"], function (a, b, c, d, e, f, g, h, i, j, k, l) {
    "use strict";
    return {
        create: function (a, b) {
            var c, d;
            return a && b ? (c = new this._smartResizer(a, b), d = c.createMap(), d._smartResizer = c, d) : void 0
        }, createWebMap: function (a, b, c) {
            var d, e;
            return b && c ? (d = new this._smartResizer(b, c), e = d.createWebMap(a)) : void 0
        }, destroy: function (a) {
            function b(a) {
                if (a._handles)for (var b = a._handles.length; b--;)a._handles[b].remove(), a._handles.splice(b, 1)
            }

            a && a._smartResizer && b(a._smartResizer)
        }, _smartResizer: d(null, {
            constructor: function (a, b) {
                this._map = null, this._autoRecenterDelay = 50, this._popupRecenterDelayer = 150, this._popupPosition = "top", this._popupBlocked = !1, this._visible = !0, this._visibilityTimer = null, this._mapDeferred = null, this._autoRecenter = b.autoRecenter || !0, this._responsiveResize = b.responsiveResize || !0, this._mapDivId = a, this._mapDiv = g.byId(a), this._mapStyle = i.get(this._mapDiv), this._options = h.mixin(b, {}), this._handles = []
            }, createMap: function () {
                return this._setMapDiv(!1), this._responsiveResize && h.mixin(this._options, {
                    smartNavigation: !1,
                    autoResize: !1
                }), this._map = new a(this._mapDivId, this._options), this._setPopup(), this._bindEvents(), this._mapDiv.__map = this._map, this._map
            }, createWebMap: function (a) {
                var c, d, e;
                return this._setMapDiv(!1), this._options.hasOwnProperty("mapOptions") || (this._options.mapOptions = {}), this._responsiveResize && h.mixin(this._options.mapOptions, {
                    smartNavigation: !1,
                    autoResize: !1
                }), c = b.createMap(a, this._mapDivId, this._options), this._mapDeferred = c, d = this, e = function (a) {
                    this._map = a.map, this._setPopup(), this._bindEvents(), this._mapDiv.__map = this._map, this._smartResizer = d
                }, this._mapDeferred.then(h.hitch(this, e)), c
            }, _setPopup: function () {
                l.add(this._map.infoWindow.domNode, "light")
            }, _setTouchBehavior: function () {
                this._options.hasOwnProperty("scrollWheelZoom") && this._options.scrollWheelZoom ? this._map.enableScrollWheelZoom() : this._map.disableScrollWheelZoom(), e(j(".esriPopup .titleButton.close"), f.press, h.hitch(this, function () {
                    this._map.infoWindow.hide()
                }))
            }, _bindEvents: function () {
                var a, b, c, d, f, g, i;
                this._map && (a = function () {
                    this._setTouchBehavior()
                }, this._map.loaded ? h.hitch(this, a).call() : this._handles.push(e(this._map, "load", h.hitch(this, a))), b = function () {
                    this._map.infoWindow.anchor = this._popupPosition;
                    var a = function (a) {
                        var b = a._map.infoWindow.location;
                        b && !a._popupBlocked && (a._popupBlocked = !0, window.setTimeout(function () {
                            a._repositionMapForInfoWin(b), a._popupBlocked = !1
                        }, a._popupRecenterDelayer))
                    };
                    this.counter = 0, this._map.on("click", h.hitch(this, function () {
                        this._map.infoWindow.isShowing && a(this)
                    })), e(this._map.graphics, "click", h.hitch(this, function () {
                        a(this)
                    })), e(this._map.infoWindow, "show", h.hitch(this, function () {
                        a(this)
                    }))
                }, this._map.loaded ? h.hitch(this, b).call() : this._handles.push(e(this._map, "load", h.hitch(this, b))), c = function (a, b, c) {
                    return function () {
                        function e() {
                            c || a.apply(f, g), d = null
                        }

                        var f = this, g = arguments;
                        d ? clearTimeout(d) : c && a.apply(f, g), d = setTimeout(e, b || 100)
                    }
                }, f = c(this._setMapDiv, 100, !1), this._handles.push(e(window, "resize", h.hitch(this, f))), this._autoRecenter && (g = function () {
                    this._map.__resizeCenter = this._map.extent.getCenter(), i = function () {
                        this._map.centerAt(this._map.__resizeCenter)
                    }, setTimeout(h.hitch(this, i), this._autoRecenterDelay)
                }, this._handles.push(e(this._map, "resize", h.hitch(this, g)))))
            }, _getMapDivVisibility: function () {
                return this._mapDiv.clientHeight > 0 || this._mapDiv.clientWidth > 0
            }, _checkVisibility: function () {
                var a = this._getMapDivVisibility();
                this._visible !== a && a && this._setMapDiv(!0)
            }, _controlVisibilityTimer: function (a) {
                a ? this._visibilityTimer = setInterval(h.hitch(this, function () {
                    this._checkVisibility()
                }), 200) : this._visibilityTimer && (clearInterval(this._visibilityTimer), this._visibilityTimer = null)
            }, _setMapDiv: function (a) {
                if (this._mapDivId && this._responsiveResize) {
                    var b, c, d, e, f, g, h, j, k;
                    b = this._getMapDivVisibility(), this._visible !== b && (this._visible = b, this._controlVisibilityTimer(!b)), this._visible && (c = document.documentElement.clientHeight, d = document.body.clientHeight, e = c - d, f = this._calcMapHeight(), g = this._calcColumnHeight(f), h = f + e, j = 0, k = !1, g > f ? (j = e > 0 ? g + e : g, k = !0) : (j = g > h ? g : h, k = !1), i.set(this._mapDivId, {
                        height: j + "px",
                        width: "auto"
                    }), this._map && a && this._visible && (this._map.resize(), this._map.reposition()))
                }
            }, _calcMapHeight: function () {
                var a = this._mapStyle, b = parseInt(a.paddingTop, 10) + parseInt(a.paddingBottom, 10) || 0, c = parseInt(a.marginTop, 10) + parseInt(a.marginBottom, 10) || 0, d = parseInt(a.borderTopWidth, 10) + parseInt(a.borderBottomWidth, 10) || 0, e = b + c + d + this._mapDiv.clientHeight;
                return e
            }, _calcColumnHeight: function () {
                var a, b, c, d = 0, e = j(this._mapDiv).closest(".row").children("[class*='col']");
                if (e.length)for (a = 0; a < e.length; a++)b = e[a], c = j("#" + this._mapDivId, b).length > 0, b.clientHeight > d && !c && (d = b.clientHeight);
                return d
            }, _repositionMapForInfoWin: function (a) {
                var b = new c(this._map.extent.xmax, this._map.extent.ymax, this._map.spatialReference), d = new c(this._map.extent.getCenter()), e = this._map.toScreen(b), f = this._map.toScreen(d), g = this._map.toScreen(a), h = 10, i = 3, j = this._map.infoWindow.domNode.childNodes[0], k = j.clientWidth, l = j.clientHeight + this._map.infoWindow.marginTop, m = g.x - k / 2, n = g.x + k / 2, o = 0 > m - h, p = n > e.x - h, q = this._map.infoWindow.offsetY, r = g.y - l - q, s = 0 > r - i;
                o ? f.x -= Math.abs(m) + h < h ? h : Math.abs(m) + h : p && (f.x += n - e.x + h), s && (f.y += r - i), (p || o || s) && (d = this._map.toMap(f), this._map.centerAt(d))
            }
        })
    }
});